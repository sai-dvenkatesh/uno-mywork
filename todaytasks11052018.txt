1. execute shellscript while importing data
2. check performance before and after smoke testing 
3. Try to show usage in graphs
4. run a shell script that runs npm only if changes identified in package.json file
5. run a shell script that finds any updates uc_ae_client and sends an alert as email etc..


started uploading 4977 records @4:30
around 4:57 pm over 2000 records created
arount 5:13 pm over 3000 records created
around 5:25 pm over 4000 records created
around 5:34 pm over 5000 records created
uc_server/server.js - consumes highest cpu around 84.8% max - memory -> 12.9 to 13.9% constantly  -> highest 14.4 % 
other node process 
for each node process around 1630MB virtual memory is allocated around 600M (RES) memory is used, SHR - 11560
usage of ram in mean time was around 1G and 2484 was available of 37490
for each mongod (923) process around 1120MB virtual memory is allocated around 140M (RES) memory is used, SHR - 7588, cpu 1.3% - 1.7%, mem  - 3.8% - 4.0%
nginx (925) virt 120M, RES 3584, SHR 1040, memory 0.1% overall
redis (916) virt 227M , RES 101M SHR 1328, cpu - 0.7% , Mem 2.7%
load average at the end of 5000 records  1.37 during records creation it was around 4, before we started the test it was 0.49 

node-> server.js process cpu was around 0.00 - 0.7%, memory -> 7.6


other node process shows up 0.00% around 1.9% memory
mongod -> 0.7 % cpu and 4.2% memory 
redis -> 0.0% cpu and 2.9% memory
nginx -> 0.0%cpu and 0.1% memory
free -m -> at end shows 2606 available memory out of 3790
